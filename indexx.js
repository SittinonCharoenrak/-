const { Client, GatewayIntentBits, REST, Routes, ButtonStyle, ModalBuilder, EmbedBuilder, ButtonBuilder, TextInputStyle, TextInputBuilder, ActionRowBuilder, SlashCommandBuilder, UserSelectMenuBuilder } = require('discord.js');
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMembers,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
    ],
});

 // ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏Ñ‡πâ‡∏î npm install discord.js

// ----------------------| ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏Ñ‡∏£‡∏±‡∏ö |------------------------- //

const Command_AD = ['834306212996579358','‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 2', '‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà3'];      // ‡πÑ‡∏≠‡∏î‡∏µ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ

const Channel_relpy = '1288393751512743966';                                       // ‡πÑ‡∏≠‡∏î‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å

// ----------------------------------------------- //

client.once('ready', async () => {
    console.log(`Bot logged in as ${client.user.tag}`);
    const commands = [
        new SlashCommandBuilder()
            .setName('selectuser')
            .setDescription('selectuser your server')
            .toJSON(),
    ];
    const rest = new REST({ version: '10' }).setToken(TOKEN_BOT);
    await rest.put(
        Routes.applicationCommands(client.user.id),
        { body: commands },
    );
});

client.on('interactionCreate', async interaction => {
    if (!interaction.isChatInputCommand()) return;
    if (interaction.commandName === 'selectuser') {
        const allowedUserIDs = Command_AD;
        if (!allowedUserIDs.includes(interaction.user.id)) {
            await interaction.reply({
                content: '<:1015312603540627476:1287300638761291816> **‡πÄ‡∏≠‡πâ‡∏∞! ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô**',
                ephemeral: true
            });
            return;
        }
        const embed = new EmbedBuilder()
            .setColor(0xffc6d0)
            .setTitle('<:1029812652945444874:1270273628772241439> <:4753lovenote:1288376897411092510> ‚ãÜ ÀöÔΩ°‚ãÜ‡≠® ‡πÅ‡∏≠‡∏ö‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏°‡∏∏‡πâ‡∏¢ ‡≠ß‚ãÜ ÀöÔΩ°‚ãÜ')    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
            .setImage('https://cdn.discordapp.com/attachments/1261972455954845729/1288366480261644298/Cute_Blue_Girl_Gamer_Twitch_Banner_1.png?ex=66f4ec49&is=66f39ac9&hm=5adab9da2941bbeb7540ad9e368c2ee5c25fe3770159a1cb6f2bcdfcc0571a18&')  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
        const row = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('sand_user')
                    .setLabel('‚ä∞‚ùû‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö')
                    .setEmoji({ name: 'üíå' })
                    .setStyle(ButtonStyle.Primary)
            );
        await interaction.reply({ embeds: [embed], components: [row] });
    }
});

client.on('interactionCreate', async interaction => {
    if (!interaction.isButton()) return;
    if (interaction.customId === 'sand_user') {
        const row = new ActionRowBuilder()
            .addComponents(
                new UserSelectMenuBuilder()
                    .setCustomId('select_user')
                    .setPlaceholder('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠')
                    .setMinValues(1)
                    .setMaxValues(1)
            );
        await interaction.reply({ components: [row], ephemeral: true });
    }
});

client.on('interactionCreate', async interaction => {
    if (interaction.isUserSelectMenu() && interaction.customId === 'select_user') {
        const selectedUserId = interaction.values[0];
        if (selectedUserId === interaction.user.id) {
            await interaction.reply({content: '<:1015312603540627476:1287300638761291816> **‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ**',ephemeral: true});
            return;
        }
        const modal = new ModalBuilder()
            .setCustomId(`submit_modals:${selectedUserId}`)
            .setTitle('‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏ö‡∏≠‡∏Å')
            .addComponents(
                new ActionRowBuilder().addComponents(
                    new TextInputBuilder()
                        .setCustomId('message_text')
                        .setLabel('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°')
                        .setStyle(TextInputStyle.Paragraph)
                        .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö')
                        .setRequired(true)
                ),
                new ActionRowBuilder().addComponents(
                    new TextInputBuilder()
                        .setCustomId('message_hint')
                        .setLabel('‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ')
                        .setStyle(TextInputStyle.Paragraph)
                        .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö')
                        .setRequired(false)
                ),
            );
        await interaction.showModal(modal);
    }
});

const messageStore = new Map();
client.on('interactionCreate', async interaction => {
    if (interaction.isModalSubmit() && interaction.customId.startsWith('submit_modals:')) {
        const selectedUserId = interaction.customId.split(':')[1];
        const selectedUser = await interaction.guild.members.fetch(selectedUserId);
        const messageText = interaction.fields.getTextInputValue('message_text');
        const messageHint = interaction.fields.getTextInputValue('message_hint') || '‡πÑ‡∏°‡πà‡∏°‡∏µ';
        const uniqueId = interaction.id;
        const originalSenderId = interaction.user.id;
        messageStore.set(uniqueId, { messageText, messageHint, selectedUserId, originalSenderId });
        const embed = new EmbedBuilder()
            .setColor(0xffc6d0)
            .setTitle('‚ãÜ ÀöÔΩ°‚ãÜ‡≠®‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡≠ß‚ãÜ ÀöÔΩ°‚ãÜ')

            .setDescription(`Íí∞<:4753lovenote:1288376897411092510>Íí±.**‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏ñ‡∏∂‡∏á** ${selectedUser}\nÍí∞<a:1212825197548413059:1260094797079904317>Íí±.**‡∏™‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á** <#${Channel_relpy}>`);
        await interaction.reply({ embeds: [embed], ephemeral: true });
        const channels = interaction.guild.channels.cache.get(Channel_relpy);
        if (channels) {
            const embed = new EmbedBuilder()
            .setImage('https://cdn.discordapp.com/attachments/1261972455954845729/1288372137068855348/Cute_Blue_Girl_Gamer_Twitch_Banner.png?ex=66f4f18e&is=66f3a00e&hm=2ae3e785c2fc0b2d00d9ede18f7b1e2c4810c3da4612a5b09f3b404742d84258&')  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                .setColor(0xFFCCFF)
                .setTitle('<:1029812652945444874:1270273628772241439> ‚ãÜÔΩ°‚ÄßÀö ö ‡πÄ‡∏ò‡∏≠‡πÜ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏°‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡πÅ‡∏´‡∏•‡∏∞>< …ûÀö‚ÄßÔΩ°‚ãÜ')
                .setDescription(`**<:4753lovenote:1288376897411092510>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°**\n<a:1177679672415359066:1268161985883672676>**\`\`${messageText}\`\`**\n\n**<:4753lovenote:1288376897411092510>‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ**\n<a:1177679672415359066:1268161985883672676>**\`\`${messageHint}\`\`**`);
            const row = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId(`reply_message:${selectedUserId}:${uniqueId}`)
                        .setLabel('‚ä∞‚ùû‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö')
                        .setEmoji({ name: 'üíå' })
                        .setStyle(ButtonStyle.Primary)
                );
            await channels.send({ content: `# ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏´‡πâ ${selectedUser}`, embeds: [embed], components: [row] });
        }
    }
});

client.on('interactionCreate', async interaction => {
    if (interaction.isButton() && interaction.customId.startsWith('reply_message:')) {
        const selectedUserId = interaction.customId.split(':')[1];
        const uniqueId = interaction.customId.split(':')[2];
        const messageData = messageStore.get(uniqueId);
        if (!messageData) {
            return await interaction.reply({ content: '<a:15831lovenote:1288388318471393300> ‡πÅ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡πà‡∏≤TT', ephemeral: true });
        }
        const allowedUserIDs = selectedUserId;
        if (!allowedUserIDs.includes(interaction.user.id)) {
            await interaction.reply({
                content: '<:1015312603540627476:1287300638761291816> **‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏ô‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ**',
                ephemeral: true
            });
            return;
        }
        const { messageText, messageHint } = messageData;
        const modal = new ModalBuilder()
            .setCustomId(`submit_modals_reply:${selectedUserId}:${uniqueId}`)
            .setTitle('‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö')
            .addComponents(
                new ActionRowBuilder().addComponents(
                    new TextInputBuilder()
                        .setCustomId('message_text_reply')
                        .setLabel('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°')
                        .setStyle(TextInputStyle.Paragraph)
                        .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö')
                        .setRequired(true)
                )
            );
        await interaction.showModal(modal);
    }
});

client.on('interactionCreate', async interaction => {
    if (interaction.isModalSubmit() && interaction.customId.startsWith('submit_modals_reply:')) {
        const selectedUserId = interaction.customId.split(':')[1];
        const uniqueId = interaction.customId.split(':')[2];
        const messageData = messageStore.get(uniqueId);
        if (!messageData) {
            return await interaction.reply({ content: '<a:15831lovenote:1288388318471393300> ‡πÅ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡πà‡∏≤TT', ephemeral: true });
        }
        const { messageText, messageHint, originalSenderId } = messageData;
        const selectedUser = await interaction.guild.members.fetch(selectedUserId);
        const messageTextReply = interaction.fields.getTextInputValue('message_text_reply');
        const embed = new EmbedBuilder()
            .setImage('https://cdn.discordapp.com/attachments/1261972455954845729/1288385523886325811/Cute_Blue_Girl_Gamer_Twitch_Banner_2.png?ex=66f4fe05&is=66f3ac85&hm=64ca7a28c8ef3143cd2475a5bda9e0fc8dbf463907faae320be7e3520b44ac7b&')  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
            .setColor(0xFF33CC)
            .setTitle('‡∏°‡∏µ‡∏Ñ‡∏ô‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏ö‡∏≠‡∏Å')
            .setDescription(`**<:4753lovenote:1288376897411092510>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°**\n<a:1177679672415359066:1268161985883672676>\`\`${messageText}\`\`**\n\n**<:4753lovenote:1288376897411092510>‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ**\n<a:1177679672415359066:1268161985883672676>\`\`${messageHint}\`\`**\n\n**<:4753lovenote:1288376897411092510>‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö**\n<a:1177679672415359066:1268161985883672676>**\`\`${messageTextReply}\`\`**`);
            
            await interaction.update({ content: `**# ‡∏ú‡∏π‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö** ${selectedUser}`, embeds: [embed], components: [] });
    }
});

client.login(TOKEN_BOT);